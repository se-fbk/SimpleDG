/*
 * generated by Xtext 2.31.0
 */
package eu.fbk.se.simpledg.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import eu.fbk.se.simpledg.simpleDG.DotGraphs

@ExtendWith(InjectionExtension)
@InjectWith(SimpleDGInjectorProvider)
class SimpleDGParsingTest {
	@Inject
	ParseHelper<DotGraphs> parseHelper
	
	@Test
	def void directed() {
		val result = parseHelper.parse('''
			digraph {
				B -> A ["arrowhead" = diamond]
				A -> C ["color"=green]
			}
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
	
	@Test
	def void undirected() {
		val result = parseHelper.parse('''
			graph {
				B -- A 
				A -- C ["color"=green]
			}
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
